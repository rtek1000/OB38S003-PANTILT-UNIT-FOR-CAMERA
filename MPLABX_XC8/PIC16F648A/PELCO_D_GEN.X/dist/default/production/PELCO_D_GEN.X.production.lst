

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Feb 09 07:49:27 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F648A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F648A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  008C                     	;# 
    80  008E                     	;# 
    81  0092                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009F                     	;# 
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  008C                     	;# 
   117  008E                     	;# 
   118  0092                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009F                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  008C                     	;# 
   154  008E                     	;# 
   155  0092                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009F                     	;# 
   163                           
   164                           	psect	idataBANK0
   165  0612                     __pidataBANK0:
   166                           
   167                           ;initializer for send_data@F518
   168  0612  34FF               	retlw	255
   169  0613  3401               	retlw	1
   170  0614  3400               	retlw	0
   171  0615  3400               	retlw	0
   172  0616  3400               	retlw	0
   173  0617  3400               	retlw	0
   174  0618  3401               	retlw	1
   175                           
   176                           ;initializer for _right_array
   177  0619  3401               	retlw	1
   178  061A  3400               	retlw	0
   179  061B  3402               	retlw	2
   180  061C  3432               	retlw	50
   181  061D  3400               	retlw	0
   182  061E  3400               	retlw	0
   183  061F  3400               	retlw	0
   184                           
   185                           ;initializer for _left_array
   186  0620  3401               	retlw	1
   187  0621  3400               	retlw	0
   188  0622  3404               	retlw	4
   189  0623  3406               	retlw	6
   190  0624  3400               	retlw	0
   191  0625  3400               	retlw	0
   192  0626  3400               	retlw	0
   193                           
   194                           ;initializer for _down_array
   195  0627  3401               	retlw	1
   196  0628  3400               	retlw	0
   197  0629  3410               	retlw	16
   198  062A  3400               	retlw	0
   199  062B  3401               	retlw	1
   200  062C  3400               	retlw	0
   201  062D  3400               	retlw	0
   202                           
   203                           ;initializer for _up_array
   204  062E  3401               	retlw	1
   205  062F  3400               	retlw	0
   206  0630  3408               	retlw	8
   207  0631  3400               	retlw	0
   208  0632  34FF               	retlw	255
   209  0633  3400               	retlw	0
   210  0634  3400               	retlw	0
   211                           
   212                           ;initializer for _stop_array
   213  0635  3401               	retlw	1
   214  0636  3400               	retlw	0
   215  0637  3400               	retlw	0
   216  0638  3400               	retlw	0
   217  0639  3400               	retlw	0
   218  063A  3400               	retlw	0
   219  063B  3400               	retlw	0
   220  0019                     _TXREG	set	25
   221  000C                     _PIR1bits	set	12
   222  0005                     _PORTAbits	set	5
   223  0006                     _PORTBbits	set	6
   224  000B                     _INTCON	set	11
   225  001F                     _CMCON	set	31
   226  0006                     _PORTB	set	6
   227  0005                     _PORTA	set	5
   228  00C4                     _CREN	set	196
   229  00C7                     _SPEN	set	199
   230  008C                     _PIE1bits	set	140
   231  0099                     _SPBRG	set	153
   232  0086                     _TRISB	set	134
   233  0085                     _TRISA	set	133
   234  0081                     _OPTION_REG	set	129
   235  04C1                     _TRMT	set	1217
   236  04C5                     _TXEN	set	1221
   237  04C4                     _SYNC	set	1220
   238  04C2                     _BRGH	set	1218
   239                           
   240                           	psect	cinit
   241  07F1                     start_initialization:	
   242                           ; #config settings
   243                           
   244  07F1                     __initialization:
   245                           
   246                           ; Initialize objects allocated to BANK0
   247  07F1  1383               	bcf	3,7	;select IRP bank0
   248  07F2  304A               	movlw	low (__pdataBANK0+42)
   249  07F3  00FD               	movwf	btemp+-1
   250  07F4  3006               	movlw	high __pidataBANK0
   251  07F5  00FE               	movwf	btemp
   252  07F6  3012               	movlw	low __pidataBANK0
   253  07F7  00FF               	movwf	btemp+1
   254  07F8  3020               	movlw	low __pdataBANK0
   255  07F9  0084               	movwf	4
   256  07FA  118A  25F1  118A   	fcall	init_ram0
   257  07FD                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  07FD                     __end_of__initialization:
   261  07FD  0183               	clrf	3
   262  07FE  118A  2F15         	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	dataBANK0
   265  0020                     __pdataBANK0:
   266  0020                     send_data@F518:
   267  0020                     	ds	7
   268  0027                     _right_array:
   269  0027                     	ds	7
   270  002E                     _left_array:
   271  002E                     	ds	7
   272  0035                     _down_array:
   273  0035                     	ds	7
   274  003C                     _up_array:
   275  003C                     	ds	7
   276  0043                     _stop_array:
   277  0043                     	ds	7
   278                           
   279                           	psect	inittext
   280  05ED                     init_fetch0:	
   281                           ;	Called with low address in FSR and high address in W
   282                           
   283  05ED  087E               	movf	btemp,w
   284  05EE  008A               	movwf	10
   285  05EF  087F               	movf	btemp+1,w
   286  05F0  0082               	movwf	2
   287  05F1                     init_ram0:	
   288                           ;Called with:
   289                           ;	high address of idata address in btemp 
   290                           ;	low address of idata address in btemp+1 
   291                           ;	low address of data in FSR
   292                           ;	high address + 1 of data in btemp-1
   293                           
   294  05F1  118A  25ED  118A   	fcall	init_fetch0
   295  05F4  0080               	movwf	0
   296  05F5  0A84               	incf	4,f
   297  05F6  0804               	movf	4,w
   298  05F7  067D               	xorwf	btemp+-1,w
   299  05F8  1903               	btfsc	3,2
   300  05F9  3400               	retlw	0
   301  05FA  0AFF               	incf	btemp+1,f
   302  05FB  1903               	btfsc	3,2
   303  05FC  0AFE               	incf	btemp,f
   304  05FD  2DF1               	goto	init_ram0
   305                           
   306                           	psect	cstackCOMMON
   307  0070                     __pcstackCOMMON:
   308  0070                     ?_UART_Init:
   309  0070                     ?_send_pelco_d:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_send_data:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_UART_Write:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_UART_Write:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     UART_Init@baudrate:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 4 bytes @ 0x0
   329  0070                     	ds	4
   330  0074                     ??_UART_Init:
   331  0074                     UART_Write@data:	
   332                           ; 1 bytes @ 0x4
   333                           
   334                           
   335                           ; 1 bytes @ 0x4
   336  0074                     	ds	1
   337  0075                     UART_Write@timeout:
   338                           
   339                           ; 4 bytes @ 0x5
   340  0075                     	ds	4
   341  0079                     ??_send_data:
   342                           
   343                           ; 1 bytes @ 0x9
   344  0079                     	ds	4
   345  007D                     send_pelco_d@cmd:
   346                           
   347                           ; 1 bytes @ 0xD
   348  007D                     	ds	1
   349                           
   350                           	psect	cstackBANK0
   351  004A                     __pcstackBANK0:
   352  004A                     send_data@_dat:
   353                           
   354                           ; 7 bytes @ 0x0
   355  004A                     	ds	7
   356  0051                     send_data@checksum_calc:
   357                           
   358                           ; 1 bytes @ 0x7
   359  0051                     	ds	1
   360  0052                     send_data@in_dat:
   361                           
   362                           ; 1 bytes @ 0x8
   363  0052                     	ds	1
   364  0053                     send_data@i_131:
   365                           
   366                           ; 1 bytes @ 0x9
   367  0053                     	ds	1
   368  0054                     send_data@i:
   369                           
   370                           ; 1 bytes @ 0xA
   371  0054                     	ds	1
   372  0055                     ??_send_pelco_d:
   373                           
   374                           ; 1 bytes @ 0xB
   375  0055                     	ds	2
   376  0057                     ??_main:
   377                           
   378                           ; 1 bytes @ 0xD
   379  0057                     	ds	2
   380                           
   381                           	psect	maintext
   382  0715                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 33 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   402 ;;      Params:         0       0       0       0
   403 ;;      Locals:         0       0       0       0
   404 ;;      Temps:          0       2       0       0
   405 ;;      Totals:         0       2       0       0
   406 ;;Total ram usage:        2 bytes
   407 ;; Hardware stack levels required when called: 3
   408 ;; This function calls:
   409 ;;		_UART_Init
   410 ;;		_send_pelco_d
   411 ;; This function is called by:
   412 ;;		Startup code after reset
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416  0715                     _main:	
   417                           ;psect for function _main
   418                           
   419  0715                     l996:	
   420                           ;incstack = 0
   421                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   422                           
   423                           
   424                           ;main.c: 34:     PORTA = 0;
   425  0715  1283               	bcf	3,5	;RP0=0, select bank0
   426  0716  1303               	bcf	3,6	;RP1=0, select bank0
   427  0717  0185               	clrf	5	;volatile
   428                           
   429                           ;main.c: 35:     PORTB = 0;
   430  0718  0186               	clrf	6	;volatile
   431  0719                     l998:
   432                           
   433                           ;main.c: 37:     CMCON = 7;
   434  0719  3007               	movlw	7
   435  071A  009F               	movwf	31	;volatile
   436  071B                     l1000:
   437                           
   438                           ;main.c: 39:     OPTION_REG = 0b11001111;
   439  071B  30CF               	movlw	207
   440  071C  1683               	bsf	3,5	;RP0=1, select bank1
   441  071D  1303               	bcf	3,6	;RP1=0, select bank1
   442  071E  0081               	movwf	1	;volatile
   443                           
   444                           ;main.c: 44:     INTCON = 0b00000000;
   445  071F  018B               	clrf	11	;volatile
   446  0720                     l1002:
   447                           
   448                           ;main.c: 48:     TRISA = 0b00001111;
   449  0720  300F               	movlw	15
   450  0721  0085               	movwf	5	;volatile
   451  0722                     l1004:
   452                           
   453                           ;main.c: 58:     TRISB = 0b00000010;
   454  0722  3002               	movlw	2
   455  0723  0086               	movwf	6	;volatile
   456  0724                     l1006:
   457                           
   458                           ;main.c: 68:     UART_Init(9600);
   459  0724  3000               	movlw	0
   460  0725  00F3               	movwf	UART_Init@baudrate+3
   461  0726  3000               	movlw	0
   462  0727  00F2               	movwf	UART_Init@baudrate+2
   463  0728  3025               	movlw	37
   464  0729  00F1               	movwf	UART_Init@baudrate+1
   465  072A  3080               	movlw	128
   466  072B  00F0               	movwf	UART_Init@baudrate
   467  072C  118A  25FE  118A   	fcall	_UART_Init
   468  072F                     l1008:
   469                           
   470                           ;main.c: 72:     PORTBbits.RB0 = 1;
   471  072F  1283               	bcf	3,5	;RP0=0, select bank0
   472  0730  1303               	bcf	3,6	;RP1=0, select bank0
   473  0731  1406               	bsf	6,0	;volatile
   474  0732                     l1010:
   475                           
   476                           ;main.c: 75:         if (PORTAbits.RA3 == 0) {
   477  0732  1985               	btfsc	5,3	;volatile
   478  0733  2F35               	goto	u261
   479  0734  2F36               	goto	u260
   480  0735                     u261:
   481  0735  2F6D               	goto	l44
   482  0736                     u260:
   483  0736                     l1012:
   484                           
   485                           ;main.c: 76:             if (PORTAbits.RA4 == 0) {
   486  0736  1A05               	btfsc	5,4	;volatile
   487  0737  2F39               	goto	u271
   488  0738  2F3A               	goto	u270
   489  0739                     u271:
   490  0739  2F4E               	goto	l1020
   491  073A                     u270:
   492  073A                     l1014:
   493                           
   494                           ;main.c: 77:                 send_pelco_d(3);
   495  073A  3003               	movlw	3
   496  073B  118A  263C  118A   	fcall	_send_pelco_d
   497  073E                     l1016:
   498                           
   499                           ;main.c: 79:                 _delay((unsigned long)((18)*(4000000/4000.0)));
   500  073E  3018               	movlw	24
   501  073F  1283               	bcf	3,5	;RP0=0, select bank0
   502  0740  1303               	bcf	3,6	;RP1=0, select bank0
   503  0741  00D8               	movwf	??_main+1
   504  0742  305E               	movlw	94
   505  0743  00D7               	movwf	??_main
   506  0744                     u377:
   507  0744  0BD7               	decfsz	??_main,f
   508  0745  2F44               	goto	u377
   509  0746  0BD8               	decfsz	??_main+1,f
   510  0747  2F44               	goto	u377
   511  0748  2F49               	nop2
   512  0749                     l1018:
   513                           
   514                           ;main.c: 81:                 send_pelco_d(1);
   515  0749  3001               	movlw	1
   516  074A  118A  263C  118A   	fcall	_send_pelco_d
   517                           
   518                           ;main.c: 82:             } else {
   519  074D  2F52               	goto	l1022
   520  074E                     l1020:
   521                           
   522                           ;main.c: 83:                 send_pelco_d(1);
   523  074E  3001               	movlw	1
   524  074F  118A  263C  118A   	fcall	_send_pelco_d
   525  0752                     l1022:
   526                           
   527                           ;main.c: 86:             _delay((unsigned long)((18)*(4000000/4000.0)));
   528  0752  3018               	movlw	24
   529  0753  1283               	bcf	3,5	;RP0=0, select bank0
   530  0754  1303               	bcf	3,6	;RP1=0, select bank0
   531  0755  00D8               	movwf	??_main+1
   532  0756  305E               	movlw	94
   533  0757  00D7               	movwf	??_main
   534  0758                     u387:
   535  0758  0BD7               	decfsz	??_main,f
   536  0759  2F58               	goto	u387
   537  075A  0BD8               	decfsz	??_main+1,f
   538  075B  2F58               	goto	u387
   539  075C  2F5D               	nop2
   540                           
   541                           ;main.c: 88:             while (PORTAbits.RA3 == 0) {
   542  075D  2F5F               	goto	l47
   543  075E                     l48:
   544                           
   545                           ;main.c: 89:                 PORTBbits.RB0 = 0;
   546  075E  1006               	bcf	6,0	;volatile
   547  075F                     l47:	
   548                           ;main.c: 90:             }
   549                           
   550                           
   551                           ;main.c: 88:             while (PORTAbits.RA3 == 0) {
   552  075F  1283               	bcf	3,5	;RP0=0, select bank0
   553  0760  1303               	bcf	3,6	;RP1=0, select bank0
   554  0761  1D85               	btfss	5,3	;volatile
   555  0762  2F64               	goto	u281
   556  0763  2F65               	goto	u280
   557  0764                     u281:
   558  0764  2F5E               	goto	l48
   559  0765                     u280:
   560  0765                     l1024:
   561                           
   562                           ;main.c: 92:             send_pelco_d(0);
   563  0765  3000               	movlw	0
   564  0766  118A  263C  118A   	fcall	_send_pelco_d
   565  0769                     l1026:
   566                           
   567                           ;main.c: 94:             PORTBbits.RB0 = 1;
   568  0769  1283               	bcf	3,5	;RP0=0, select bank0
   569  076A  1303               	bcf	3,6	;RP1=0, select bank0
   570  076B  1406               	bsf	6,0	;volatile
   571                           
   572                           ;main.c: 95:         } else if (PORTAbits.RA0 == 0) {
   573  076C  2F32               	goto	l1010
   574  076D                     l44:
   575  076D  1805               	btfsc	5,0	;volatile
   576  076E  2F70               	goto	u291
   577  076F  2F71               	goto	u290
   578  0770                     u291:
   579  0770  2FA8               	goto	l51
   580  0771                     u290:
   581  0771                     l1028:
   582                           
   583                           ;main.c: 96:             if (PORTAbits.RA4 == 0) {
   584  0771  1A05               	btfsc	5,4	;volatile
   585  0772  2F74               	goto	u301
   586  0773  2F75               	goto	u300
   587  0774                     u301:
   588  0774  2F89               	goto	l1036
   589  0775                     u300:
   590  0775                     l1030:
   591                           
   592                           ;main.c: 97:                 send_pelco_d(3);
   593  0775  3003               	movlw	3
   594  0776  118A  263C  118A   	fcall	_send_pelco_d
   595  0779                     l1032:
   596                           
   597                           ;main.c: 99:                 _delay((unsigned long)((18)*(4000000/4000.0)));
   598  0779  3018               	movlw	24
   599  077A  1283               	bcf	3,5	;RP0=0, select bank0
   600  077B  1303               	bcf	3,6	;RP1=0, select bank0
   601  077C  00D8               	movwf	??_main+1
   602  077D  305E               	movlw	94
   603  077E  00D7               	movwf	??_main
   604  077F                     u397:
   605  077F  0BD7               	decfsz	??_main,f
   606  0780  2F7F               	goto	u397
   607  0781  0BD8               	decfsz	??_main+1,f
   608  0782  2F7F               	goto	u397
   609  0783  2F84               	nop2
   610  0784                     l1034:
   611                           
   612                           ;main.c: 101:                 send_pelco_d(2);
   613  0784  3002               	movlw	2
   614  0785  118A  263C  118A   	fcall	_send_pelco_d
   615                           
   616                           ;main.c: 102:             } else {
   617  0788  2F8D               	goto	l1038
   618  0789                     l1036:
   619                           
   620                           ;main.c: 103:                 send_pelco_d(2);
   621  0789  3002               	movlw	2
   622  078A  118A  263C  118A   	fcall	_send_pelco_d
   623  078D                     l1038:
   624                           
   625                           ;main.c: 106:             _delay((unsigned long)((18)*(4000000/4000.0)));
   626  078D  3018               	movlw	24
   627  078E  1283               	bcf	3,5	;RP0=0, select bank0
   628  078F  1303               	bcf	3,6	;RP1=0, select bank0
   629  0790  00D8               	movwf	??_main+1
   630  0791  305E               	movlw	94
   631  0792  00D7               	movwf	??_main
   632  0793                     u407:
   633  0793  0BD7               	decfsz	??_main,f
   634  0794  2F93               	goto	u407
   635  0795  0BD8               	decfsz	??_main+1,f
   636  0796  2F93               	goto	u407
   637  0797  2F98               	nop2
   638                           
   639                           ;main.c: 108:             while (PORTAbits.RA0 == 0) {
   640  0798  2F9A               	goto	l54
   641  0799                     l55:
   642                           
   643                           ;main.c: 109:                 PORTBbits.RB0 = 0;
   644  0799  1006               	bcf	6,0	;volatile
   645  079A                     l54:	
   646                           ;main.c: 110:             }
   647                           
   648                           
   649                           ;main.c: 108:             while (PORTAbits.RA0 == 0) {
   650  079A  1283               	bcf	3,5	;RP0=0, select bank0
   651  079B  1303               	bcf	3,6	;RP1=0, select bank0
   652  079C  1C05               	btfss	5,0	;volatile
   653  079D  2F9F               	goto	u311
   654  079E  2FA0               	goto	u310
   655  079F                     u311:
   656  079F  2F99               	goto	l55
   657  07A0                     u310:
   658  07A0                     l1040:
   659                           
   660                           ;main.c: 112:             send_pelco_d(0);
   661  07A0  3000               	movlw	0
   662  07A1  118A  263C  118A   	fcall	_send_pelco_d
   663  07A4                     l1042:
   664                           
   665                           ;main.c: 114:             PORTBbits.RB0 = 1;
   666  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   667  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   668  07A6  1406               	bsf	6,0	;volatile
   669                           
   670                           ;main.c: 115:         } else if (PORTAbits.RA1 == 0) {
   671  07A7  2F32               	goto	l1010
   672  07A8                     l51:
   673  07A8  1885               	btfsc	5,1	;volatile
   674  07A9  2FAB               	goto	u321
   675  07AA  2FAC               	goto	u320
   676  07AB                     u321:
   677  07AB  2FCB               	goto	l58
   678  07AC                     u320:
   679  07AC                     l1044:
   680                           
   681                           ;main.c: 116:             send_pelco_d(3);
   682  07AC  3003               	movlw	3
   683  07AD  118A  263C  118A   	fcall	_send_pelco_d
   684                           
   685                           ;main.c: 118:             while (PORTAbits.RA1 == 0) {
   686  07B0  2FB2               	goto	l59
   687  07B1                     l60:
   688                           
   689                           ;main.c: 119:                 PORTBbits.RB0 = 0;
   690  07B1  1006               	bcf	6,0	;volatile
   691  07B2                     l59:	
   692                           ;main.c: 120:             }
   693                           
   694                           
   695                           ;main.c: 118:             while (PORTAbits.RA1 == 0) {
   696  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   697  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   698  07B4  1C85               	btfss	5,1	;volatile
   699  07B5  2FB7               	goto	u331
   700  07B6  2FB8               	goto	u330
   701  07B7                     u331:
   702  07B7  2FB1               	goto	l60
   703  07B8                     u330:
   704  07B8                     l1046:
   705                           
   706                           ;main.c: 122:             _delay((unsigned long)((18)*(4000000/4000.0)));
   707  07B8  3018               	movlw	24
   708  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   709  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   710  07BB  00D8               	movwf	??_main+1
   711  07BC  305E               	movlw	94
   712  07BD  00D7               	movwf	??_main
   713  07BE                     u417:
   714  07BE  0BD7               	decfsz	??_main,f
   715  07BF  2FBE               	goto	u417
   716  07C0  0BD8               	decfsz	??_main+1,f
   717  07C1  2FBE               	goto	u417
   718  07C2  2FC3               	nop2
   719  07C3                     l1048:
   720                           
   721                           ;main.c: 124:             send_pelco_d(0);
   722  07C3  3000               	movlw	0
   723  07C4  118A  263C  118A   	fcall	_send_pelco_d
   724  07C7                     l1050:
   725                           
   726                           ;main.c: 126:             PORTBbits.RB0 = 1;
   727  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   728  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   729  07C9  1406               	bsf	6,0	;volatile
   730                           
   731                           ;main.c: 127:         } else if (PORTAbits.RA2 == 0) {
   732  07CA  2F32               	goto	l1010
   733  07CB                     l58:
   734  07CB  1905               	btfsc	5,2	;volatile
   735  07CC  2FCE               	goto	u341
   736  07CD  2FCF               	goto	u340
   737  07CE                     u341:
   738  07CE  2FEE               	goto	l50
   739  07CF                     u340:
   740  07CF                     l1052:
   741                           
   742                           ;main.c: 128:             send_pelco_d(4);
   743  07CF  3004               	movlw	4
   744  07D0  118A  263C  118A   	fcall	_send_pelco_d
   745                           
   746                           ;main.c: 130:             while (PORTAbits.RA2 == 0) {
   747  07D3  2FD5               	goto	l64
   748  07D4                     l65:
   749                           
   750                           ;main.c: 131:                 PORTBbits.RB0 = 0;
   751  07D4  1006               	bcf	6,0	;volatile
   752  07D5                     l64:	
   753                           ;main.c: 132:             }
   754                           
   755                           
   756                           ;main.c: 130:             while (PORTAbits.RA2 == 0) {
   757  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   758  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   759  07D7  1D05               	btfss	5,2	;volatile
   760  07D8  2FDA               	goto	u351
   761  07D9  2FDB               	goto	u350
   762  07DA                     u351:
   763  07DA  2FD4               	goto	l65
   764  07DB                     u350:
   765  07DB                     l1054:
   766                           
   767                           ;main.c: 134:             _delay((unsigned long)((18)*(4000000/4000.0)));
   768  07DB  3018               	movlw	24
   769  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   770  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   771  07DE  00D8               	movwf	??_main+1
   772  07DF  305E               	movlw	94
   773  07E0  00D7               	movwf	??_main
   774  07E1                     u427:
   775  07E1  0BD7               	decfsz	??_main,f
   776  07E2  2FE1               	goto	u427
   777  07E3  0BD8               	decfsz	??_main+1,f
   778  07E4  2FE1               	goto	u427
   779  07E5  2FE6               	nop2
   780  07E6                     l1056:
   781                           
   782                           ;main.c: 136:             send_pelco_d(0);
   783  07E6  3000               	movlw	0
   784  07E7  118A  263C  118A   	fcall	_send_pelco_d
   785  07EA                     l1058:
   786                           
   787                           ;main.c: 138:             PORTBbits.RB0 = 1;
   788  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   789  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   790  07EC  1406               	bsf	6,0	;volatile
   791  07ED  2F32               	goto	l1010
   792  07EE                     l50:
   793  07EE  2F32               	goto	l1010
   794  07EF  118A  2800         	ljmp	start
   795  07F1                     __end_of_main:
   796                           
   797                           	psect	text1
   798  063C                     __ptext1:	
   799 ;; *************** function _send_pelco_d *****************
   800 ;; Defined at:
   801 ;;		line 157 in file "main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  cmd             1    wreg     unsigned char 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  cmd             1   13[COMMON] unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   815 ;;      Params:         0       0       0       0
   816 ;;      Locals:         1       0       0       0
   817 ;;      Temps:          0       2       0       0
   818 ;;      Totals:         1       2       0       0
   819 ;;Total ram usage:        3 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 2
   822 ;; This function calls:
   823 ;;		_send_data
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829  063C                     _send_pelco_d:	
   830                           ;psect for function _send_pelco_d
   831                           
   832                           
   833                           ;incstack = 0
   834                           ; Regs used in _send_pelco_d: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   835                           ;send_pelco_d@cmd stored from wreg
   836  063C  00FD               	movwf	send_pelco_d@cmd
   837  063D                     l976:
   838                           
   839                           ;main.c: 158:     switch (cmd) {
   840  063D  2E57               	goto	l990
   841  063E                     l978:
   842                           
   843                           ;main.c: 160:         {;main.c: 161:             send_data(stop_array);
   844  063E  3043               	movlw	(low (_stop_array| 0))& (0+255)
   845  063F  118A  26AC  118A   	fcall	_send_data
   846                           
   847                           ;main.c: 162:             break;
   848  0642  2E72               	goto	l80
   849  0643                     l980:
   850                           
   851                           ;main.c: 165:         {;main.c: 166:             send_data(up_array);
   852  0643  303C               	movlw	(low (_up_array| 0))& (0+255)
   853  0644  118A  26AC  118A   	fcall	_send_data
   854                           
   855                           ;main.c: 167:             break;
   856  0647  2E72               	goto	l80
   857  0648                     l982:
   858                           
   859                           ;main.c: 170:         {;main.c: 171:             send_data(down_array);
   860  0648  3035               	movlw	(low (_down_array| 0))& (0+255)
   861  0649  118A  26AC  118A   	fcall	_send_data
   862                           
   863                           ;main.c: 172:             break;
   864  064C  2E72               	goto	l80
   865  064D                     l984:
   866                           
   867                           ;main.c: 175:         {;main.c: 176:             send_data(left_array);
   868  064D  302E               	movlw	(low (_left_array| 0))& (0+255)
   869  064E  118A  26AC  118A   	fcall	_send_data
   870                           
   871                           ;main.c: 177:             break;
   872  0651  2E72               	goto	l80
   873  0652                     l986:
   874                           
   875                           ;main.c: 180:         {;main.c: 181:             send_data(right_array);
   876  0652  3027               	movlw	(low (_right_array| 0))& (0+255)
   877  0653  118A  26AC  118A   	fcall	_send_data
   878                           
   879                           ;main.c: 182:             break;
   880  0656  2E72               	goto	l80
   881  0657                     l990:
   882  0657  087D               	movf	send_pelco_d@cmd,w
   883  0658  1283               	bcf	3,5	;RP0=0, select bank0
   884  0659  1303               	bcf	3,6	;RP1=0, select bank0
   885  065A  00D5               	movwf	??_send_pelco_d
   886  065B  01D6               	clrf	??_send_pelco_d+1
   887                           
   888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   889                           ; Switch size 1, requested type "simple"
   890                           ; Number of cases is 1, Range of values is 0 to 0
   891                           ; switch strategies available:
   892                           ; Name         Instructions Cycles
   893                           ; simple_byte            4     3 (average)
   894                           ; direct_byte            9     7 (fixed)
   895                           ; jumptable            260     6 (fixed)
   896                           ;	Chosen strategy is simple_byte
   897  065C  0856               	movf	??_send_pelco_d+1,w
   898  065D  3A00               	xorlw	0	; case 0
   899  065E  1903               	skipnz
   900  065F  2E61               	goto	l1088
   901  0660  2E72               	goto	l80
   902  0661                     l1088:
   903                           
   904                           ; Switch size 1, requested type "simple"
   905                           ; Number of cases is 5, Range of values is 0 to 4
   906                           ; switch strategies available:
   907                           ; Name         Instructions Cycles
   908                           ; simple_byte           16     9 (average)
   909                           ; direct_byte           17     7 (fixed)
   910                           ; jumptable            260     6 (fixed)
   911                           ;	Chosen strategy is simple_byte
   912  0661  0855               	movf	??_send_pelco_d,w
   913  0662  3A00               	xorlw	0	; case 0
   914  0663  1903               	skipnz
   915  0664  2E3E               	goto	l978
   916  0665  3A01               	xorlw	1	; case 1
   917  0666  1903               	skipnz
   918  0667  2E43               	goto	l980
   919  0668  3A03               	xorlw	3	; case 2
   920  0669  1903               	skipnz
   921  066A  2E48               	goto	l982
   922  066B  3A01               	xorlw	1	; case 3
   923  066C  1903               	skipnz
   924  066D  2E4D               	goto	l984
   925  066E  3A07               	xorlw	7	; case 4
   926  066F  1903               	skipnz
   927  0670  2E52               	goto	l986
   928  0671  2E72               	goto	l80
   929  0672                     l80:
   930  0672  0008               	return
   931  0673                     __end_of_send_pelco_d:
   932                           
   933                           	psect	text2
   934  06AC                     __ptext2:	
   935 ;; *************** function _send_data *****************
   936 ;; Defined at:
   937 ;;		line 189 in file "main.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  in_dat          1    wreg     PTR unsigned char 
   940 ;;		 -> right_array(7), left_array(7), down_array(7), up_array(7), 
   941 ;;		 -> stop_array(7), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  in_dat          1    8[BANK0 ] PTR unsigned char 
   944 ;;		 -> right_array(7), left_array(7), down_array(7), up_array(7), 
   945 ;;		 -> stop_array(7), 
   946 ;;  i               1    9[BANK0 ] unsigned char 
   947 ;;  _dat            7    0[BANK0 ] unsigned char [7]
   948 ;;  i               1   10[BANK0 ] unsigned char 
   949 ;;  checksum_cal    1    7[BANK0 ] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   959 ;;      Params:         0       0       0       0
   960 ;;      Locals:         0      11       0       0
   961 ;;      Temps:          4       0       0       0
   962 ;;      Totals:         4      11       0       0
   963 ;;Total ram usage:       15 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 1
   966 ;; This function calls:
   967 ;;		_UART_Write
   968 ;; This function is called by:
   969 ;;		_send_pelco_d
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973  06AC                     _send_data:	
   974                           ;psect for function _send_data
   975                           
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in _send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   979                           ;send_data@in_dat stored from wreg
   980  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   981  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   982  06AE  00D2               	movwf	send_data@in_dat
   983  06AF                     l912:
   984  06AF                     l914:
   985                           
   986                           ;main.c: 191:     uint8_t _dat[7] = {0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01};
   987  06AF  304A               	movlw	send_data@_dat& (0+255)
   988  06B0  0084               	movwf	4
   989  06B1  3020               	movlw	low send_data@F518
   990  06B2  00F9               	movwf	??_send_data
   991  06B3  0804               	movf	4,w
   992  06B4  00FA               	movwf	??_send_data+1
   993  06B5  3007               	movlw	7
   994  06B6  00FB               	movwf	??_send_data+2
   995  06B7                     u220:
   996  06B7  0879               	movf	??_send_data,w
   997  06B8  0084               	movwf	4
   998  06B9  1383               	bcf	3,7	;select IRP bank0
   999  06BA  0800               	movf	0,w
  1000  06BB  00FC               	movwf	??_send_data+3
  1001  06BC  0AF9               	incf	??_send_data,f
  1002  06BD  087A               	movf	??_send_data+1,w
  1003  06BE  0084               	movwf	4
  1004  06BF  087C               	movf	??_send_data+3,w
  1005  06C0  0080               	movwf	0
  1006  06C1  0AFA               	incf	??_send_data+1,f
  1007  06C2  0BFB               	decfsz	??_send_data+2,f
  1008  06C3  2EB7               	goto	u220
  1009  06C4                     l916:
  1010                           
  1011                           ;main.c: 192:     uint8_t checksum_calc = 0;
  1012  06C4  01D1               	clrf	send_data@checksum_calc
  1013  06C5                     l918:
  1014                           
  1015                           ;main.c: 202:     _dat[0] = 0xFF;
  1016  06C5  30FF               	movlw	255
  1017  06C6  00F9               	movwf	??_send_data
  1018  06C7  0879               	movf	??_send_data,w
  1019  06C8  00CA               	movwf	send_data@_dat
  1020  06C9                     l920:
  1021                           
  1022                           ;main.c: 204:     for (i = 0; i <= 4; i++) {
  1023  06C9  01D4               	clrf	send_data@i
  1024  06CA                     l926:
  1025                           
  1026                           ;main.c: 205:         _dat[i + 1] = in_dat[i];
  1027  06CA  0854               	movf	send_data@i,w
  1028  06CB  0752               	addwf	send_data@in_dat,w
  1029  06CC  00F9               	movwf	??_send_data
  1030  06CD  0879               	movf	??_send_data,w
  1031  06CE  0084               	movwf	4
  1032  06CF  0800               	movf	0,w
  1033  06D0  00FA               	movwf	??_send_data+1
  1034  06D1  0854               	movf	send_data@i,w
  1035  06D2  3E01               	addlw	1
  1036  06D3  3E4A               	addlw	(low (send_data@_dat| 0))& (0+255)
  1037  06D4  0084               	movwf	4
  1038  06D5  087A               	movf	??_send_data+1,w
  1039  06D6  0080               	movwf	0
  1040  06D7                     l928:
  1041                           
  1042                           ;main.c: 206:     }
  1043  06D7  3001               	movlw	1
  1044  06D8  00F9               	movwf	??_send_data
  1045  06D9  0879               	movf	??_send_data,w
  1046  06DA  07D4               	addwf	send_data@i,f
  1047  06DB                     l930:
  1048  06DB  3005               	movlw	5
  1049  06DC  0254               	subwf	send_data@i,w
  1050  06DD  1C03               	skipc
  1051  06DE  2EE0               	goto	u231
  1052  06DF  2EE1               	goto	u230
  1053  06E0                     u231:
  1054  06E0  2ECA               	goto	l926
  1055  06E1                     u230:
  1056  06E1                     l86:
  1057                           
  1058                           ;main.c: 208:     for (uint8_t i = 1; i <= 5; i++) {
  1059  06E1  01D3               	clrf	send_data@i_131
  1060  06E2  0AD3               	incf	send_data@i_131,f
  1061  06E3                     l936:
  1062                           
  1063                           ;main.c: 209:         checksum_calc += _dat[i];
  1064  06E3  0853               	movf	send_data@i_131,w
  1065  06E4  3E4A               	addlw	(low (send_data@_dat| 0))& (0+255)
  1066  06E5  0084               	movwf	4
  1067  06E6  0800               	movf	0,w
  1068  06E7  00F9               	movwf	??_send_data
  1069  06E8  0879               	movf	??_send_data,w
  1070  06E9  07D1               	addwf	send_data@checksum_calc,f
  1071  06EA                     l938:
  1072                           
  1073                           ;main.c: 210:     }
  1074  06EA  3001               	movlw	1
  1075  06EB  00F9               	movwf	??_send_data
  1076  06EC  0879               	movf	??_send_data,w
  1077  06ED  07D3               	addwf	send_data@i_131,f
  1078  06EE                     l940:
  1079  06EE  3006               	movlw	6
  1080  06EF  0253               	subwf	send_data@i_131,w
  1081  06F0  1C03               	skipc
  1082  06F1  2EF3               	goto	u241
  1083  06F2  2EF4               	goto	u240
  1084  06F3                     u241:
  1085  06F3  2EE3               	goto	l936
  1086  06F4                     u240:
  1087  06F4                     l942:
  1088                           
  1089                           ;main.c: 212:     _dat[6] = checksum_calc;
  1090  06F4  0851               	movf	send_data@checksum_calc,w
  1091  06F5  00F9               	movwf	??_send_data
  1092  06F6  0879               	movf	??_send_data,w
  1093  06F7  00D0               	movwf	send_data@_dat+6
  1094  06F8                     l944:
  1095                           
  1096                           ;main.c: 214:     for (i = 0; i <= 6; i++) {
  1097  06F8  01D4               	clrf	send_data@i
  1098  06F9                     l950:
  1099                           
  1100                           ;main.c: 215:         UART_Write(_dat[i]);
  1101  06F9  0854               	movf	send_data@i,w
  1102  06FA  3E4A               	addlw	(low (send_data@_dat| 0))& (0+255)
  1103  06FB  0084               	movwf	4
  1104  06FC  1383               	bcf	3,7	;select IRP bank0
  1105  06FD  0800               	movf	0,w
  1106  06FE  118A  2673  118A   	fcall	_UART_Write
  1107  0701                     l952:
  1108                           
  1109                           ;main.c: 217:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1110  0701  30C7               	movlw	199
  1111  0702  00F9               	movwf	??_send_data
  1112  0703                     u437:
  1113  0703  2F04               	nop2
  1114  0704  0BF9               	decfsz	??_send_data,f
  1115  0705  2F03               	goto	u437
  1116  0706  2F07               	nop2
  1117  0707  2F08               	nop2
  1118  0708                     l954:
  1119                           
  1120                           ;main.c: 218:     }
  1121  0708  3001               	movlw	1
  1122  0709  00F9               	movwf	??_send_data
  1123  070A  0879               	movf	??_send_data,w
  1124  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1125  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1126  070D  07D4               	addwf	send_data@i,f
  1127  070E                     l956:
  1128  070E  3007               	movlw	7
  1129  070F  0254               	subwf	send_data@i,w
  1130  0710  1C03               	skipc
  1131  0711  2F13               	goto	u251
  1132  0712  2F14               	goto	u250
  1133  0713                     u251:
  1134  0713  2EF9               	goto	l950
  1135  0714                     u250:
  1136  0714                     l91:
  1137  0714  0008               	return
  1138  0715                     __end_of_send_data:
  1139                           
  1140                           	psect	text3
  1141  0673                     __ptext3:	
  1142 ;; *************** function _UART_Write *****************
  1143 ;; Defined at:
  1144 ;;		line 46 in file "../SUPORTE_PELCO_D.X/usart.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  data            1    wreg     unsigned char 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  data            1    4[COMMON] unsigned char 
  1149 ;;  timeout         4    5[COMMON] unsigned long 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1159 ;;      Params:         0       0       0       0
  1160 ;;      Locals:         5       0       0       0
  1161 ;;      Temps:          4       0       0       0
  1162 ;;      Totals:         9       0       0       0
  1163 ;;Total ram usage:        9 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_send_data
  1169 ;;		_UART_Write_Text
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173  0673                     _UART_Write:	
  1174                           ;psect for function _UART_Write
  1175                           
  1176                           
  1177                           ;incstack = 0
  1178                           ; Regs used in _UART_Write: [wreg]
  1179                           ;UART_Write@data stored from wreg
  1180  0673  00F4               	movwf	UART_Write@data
  1181  0674                     l904:
  1182                           
  1183                           ;../SUPORTE_PELCO_D.X/usart.c: 47:     unsigned long timeout = 0x1FFFF;
  1184  0674  3000               	movlw	0
  1185  0675  00F8               	movwf	UART_Write@timeout+3
  1186  0676  3001               	movlw	1
  1187  0677  00F7               	movwf	UART_Write@timeout+2
  1188  0678  30FF               	movlw	255
  1189  0679  00F6               	movwf	UART_Write@timeout+1
  1190  067A  30FF               	movlw	255
  1191  067B  00F5               	movwf	UART_Write@timeout
  1192                           
  1193                           ;../SUPORTE_PELCO_D.X/usart.c: 49:     while (!TRMT) {
  1194  067C  2EA1               	goto	l117
  1195  067D                     l906:
  1196                           
  1197                           ;../SUPORTE_PELCO_D.X/usart.c: 50:         if (timeout > 0) {
  1198  067D  0878               	movf	UART_Write@timeout+3,w
  1199  067E  0477               	iorwf	UART_Write@timeout+2,w
  1200  067F  0476               	iorwf	UART_Write@timeout+1,w
  1201  0680  0475               	iorwf	UART_Write@timeout,w
  1202  0681  1903               	skipnz
  1203  0682  2E84               	goto	u191
  1204  0683  2E85               	goto	u190
  1205  0684                     u191:
  1206  0684  2EA7               	goto	l910
  1207  0685                     u190:
  1208  0685                     l908:
  1209                           
  1210                           ;../SUPORTE_PELCO_D.X/usart.c: 51:             timeout--;
  1211  0685  3001               	movlw	1
  1212  0686  00F0               	movwf	??_UART_Write
  1213  0687  3000               	movlw	0
  1214  0688  00F1               	movwf	??_UART_Write+1
  1215  0689  3000               	movlw	0
  1216  068A  00F2               	movwf	??_UART_Write+2
  1217  068B  3000               	movlw	0
  1218  068C  00F3               	movwf	??_UART_Write+3
  1219  068D  0870               	movf	??_UART_Write,w
  1220  068E  02F5               	subwf	UART_Write@timeout,f
  1221  068F  0871               	movf	??_UART_Write+1,w
  1222  0690  1C03               	skipc
  1223  0691  0F71               	incfsz	??_UART_Write+1,w
  1224  0692  2E94               	goto	u205
  1225  0693  2E95               	goto	u206
  1226  0694                     u205:
  1227  0694  02F6               	subwf	UART_Write@timeout+1,f
  1228  0695                     u206:
  1229  0695  0872               	movf	??_UART_Write+2,w
  1230  0696  1C03               	skipc
  1231  0697  0F72               	incfsz	??_UART_Write+2,w
  1232  0698  2E9A               	goto	u207
  1233  0699  2E9B               	goto	u208
  1234  069A                     u207:
  1235  069A  02F7               	subwf	UART_Write@timeout+2,f
  1236  069B                     u208:
  1237  069B  0873               	movf	??_UART_Write+3,w
  1238  069C  1C03               	skipc
  1239  069D  0F73               	incfsz	??_UART_Write+3,w
  1240  069E  2EA0               	goto	u209
  1241  069F  2EA1               	goto	u200
  1242  06A0                     u209:
  1243  06A0  02F8               	subwf	UART_Write@timeout+3,f
  1244  06A1                     u200:
  1245  06A1                     l117:	
  1246                           ;../SUPORTE_PELCO_D.X/usart.c: 55:     }
  1247                           
  1248                           
  1249                           ;../SUPORTE_PELCO_D.X/usart.c: 49:     while (!TRMT) {
  1250  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  1251  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  1252  06A3  1C98               	btfss	24,1	;volatile
  1253  06A4  2EA6               	goto	u211
  1254  06A5  2EA7               	goto	u210
  1255  06A6                     u211:
  1256  06A6  2E7D               	goto	l906
  1257  06A7                     u210:
  1258  06A7                     l910:
  1259                           
  1260                           ;../SUPORTE_PELCO_D.X/usart.c: 57:     TXREG = data;
  1261  06A7  0874               	movf	UART_Write@data,w
  1262  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1263  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1264  06AA  0099               	movwf	25	;volatile
  1265  06AB                     l122:
  1266  06AB  0008               	return
  1267  06AC                     __end_of_UART_Write:
  1268                           
  1269                           	psect	text4
  1270  05FE                     __ptext4:	
  1271 ;; *************** function _UART_Init *****************
  1272 ;; Defined at:
  1273 ;;		line 10 in file "../SUPORTE_PELCO_D.X/usart.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  baudrate        4    0[COMMON] const unsigned long 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      unsigned char 
  1280 ;; Registers used:
  1281 ;;		wreg
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1287 ;;      Params:         4       0       0       0
  1288 ;;      Locals:         0       0       0       0
  1289 ;;      Temps:          0       0       0       0
  1290 ;;      Totals:         4       0       0       0
  1291 ;;Total ram usage:        4 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300  05FE                     _UART_Init:	
  1301                           ;psect for function _UART_Init
  1302                           
  1303  05FE                     l958:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _UART_Init: [wreg]
  1306                           
  1307                           
  1308                           ;../SUPORTE_PELCO_D.X/usart.c: 14:     BRGH = 1;
  1309  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  1310  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  1311  0600  1518               	bsf	24,2	;volatile
  1312  0601                     l960:
  1313                           
  1314                           ;../SUPORTE_PELCO_D.X/usart.c: 15:     SPBRG = 25;
  1315  0601  3019               	movlw	25
  1316  0602  0099               	movwf	25	;volatile
  1317  0603                     l962:
  1318                           
  1319                           ;../SUPORTE_PELCO_D.X/usart.c: 16:     SYNC = 0;
  1320  0603  1218               	bcf	24,4	;volatile
  1321  0604                     l964:
  1322                           
  1323                           ;../SUPORTE_PELCO_D.X/usart.c: 17:     SPEN = 1;
  1324  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0606  1798               	bsf	24,7	;volatile
  1327  0607                     l966:
  1328                           
  1329                           ;../SUPORTE_PELCO_D.X/usart.c: 18:     CREN = 1;
  1330  0607  1618               	bsf	24,4	;volatile
  1331  0608                     l968:
  1332                           
  1333                           ;../SUPORTE_PELCO_D.X/usart.c: 19:     TXEN = 1;
  1334  0608  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0609  1303               	bcf	3,6	;RP1=0, select bank1
  1336  060A  1698               	bsf	24,5	;volatile
  1337  060B                     l970:
  1338                           
  1339                           ;../SUPORTE_PELCO_D.X/usart.c: 21:     PIR1bits.RCIF = 0;
  1340  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1341  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1342  060D  128C               	bcf	12,5	;volatile
  1343  060E                     l972:
  1344                           
  1345                           ;../SUPORTE_PELCO_D.X/usart.c: 22:     PIE1bits.RCIE = 1;
  1346  060E  1683               	bsf	3,5	;RP0=1, select bank1
  1347  060F  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0610  168C               	bsf	12,5	;volatile
  1349  0611                     l114:
  1350  0611  0008               	return
  1351  0612                     __end_of_UART_Init:
  1352  007E                     btemp	set	126	;btemp
  1353  007E                     wtemp0	set	126
  1354                           
  1355                           	psect	config
  1356                           
  1357                           ;Config register CONFIG @ 0x2007
  1358                           ;	Oscillator Selection bits
  1359                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1360                           ;	Watchdog Timer Enable bit
  1361                           ;	WDTE = OFF, WDT disabled
  1362                           ;	Power-up Timer Enable bit
  1363                           ;	PWRTE = ON, PWRT enabled
  1364                           ;	RA5/MCLR/VPP Pin Function Select bit
  1365                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  1366                           ;	Brown-out Detect Enable bit
  1367                           ;	BOREN = ON, BOD enabled
  1368                           ;	Low-Voltage Programming Enable bit
  1369                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1370                           ;	Data EE Memory Code Protection bit
  1371                           ;	CPD = OFF, Data memory code protection off
  1372                           ;	Flash Program Memory Code Protection bit
  1373                           ;	CP = OFF, Code protection off
  1374  2007                     	org	8199
  1375  2007  3F50               	dw	16208

Data Sizes:
    Strings     0
    Constant    0
    Data        42
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      57
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    send_data@in_dat	PTR unsigned char  size(1) Largest target is 7
		 -> right_array(BANK0[7]), left_array(BANK0[7]), down_array(BANK0[7]), up_array(BANK0[7]), 
		 -> stop_array(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_send_pelco_d
    _send_pelco_d->_send_data
    _send_data->_UART_Write

Critical Paths under _main in BANK0

    _main->_send_pelco_d
    _send_pelco_d->_send_data

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     678
                                             13 BANK0      2     2      0
                          _UART_Init
                       _send_pelco_d
 ---------------------------------------------------------------------------------
 (1) _send_pelco_d                                         3     3      0     602
                                             13 COMMON     1     1      0
                                             11 BANK0      2     2      0
                          _send_data
 ---------------------------------------------------------------------------------
 (2) _send_data                                           15    15      0     580
                                              9 COMMON     4     4      0
                                              0 BANK0     11    11      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           9     9      0      46
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4      76
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _send_pelco_d
     _send_data
       _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      39       3       71.2%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      47      10        0.0%
ABS                  0      0      47       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Feb 09 07:49:27 2025

                      pc 0002                       l50 07EE                       l51 07A8  
                     l60 07B1                       l44 076D                       l54 079A  
                     l55 0799                       l47 075F                       l80 0672  
                     l64 07D5                       l48 075E                       l65 07D4  
                     l58 07CB                       l91 0714                       l59 07B2  
                     l86 06E1                       fsr 0004                      l114 0611  
                    l122 06AB                      l117 06A1                      l910 06A7  
                    l904 0674                      l920 06C9                      l912 06AF  
                    l906 067D                      l930 06DB                      l914 06AF  
                    l908 0685                      l940 06EE                      l916 06C4  
                    l950 06F9                      l942 06F4                      l926 06CA  
                    l918 06C5                      l960 0601                      l952 0701  
                    l944 06F8                      l936 06E3                      l928 06D7  
                    l970 060B                      l962 0603                      l954 0708  
                    l938 06EA                      l972 060E                      l964 0604  
                    l956 070E                      l980 0643                      l966 0607  
                    l958 05FE                      l982 0648                      l990 0657  
                    l968 0608                      l984 064D                      l976 063D  
                    l986 0652                      l978 063E                      l996 0715  
                    l998 0719                      u200 06A1                      u210 06A7  
                    u211 06A6                      u220 06B7                      u300 0775  
                    u205 0694                      u301 0774                      u206 0695  
                    u230 06E1                      u310 07A0                      u207 069A  
                    u231 06E0                      u311 079F                      u208 069B  
                    u240 06F4                      u320 07AC                      u209 06A0  
                    u241 06F3                      u321 07AB                      u250 0714  
                    u330 07B8                      u251 0713                      u331 07B7  
                    u340 07CF                      u260 0736                      u341 07CE  
                    u261 0735                      u190 0685                      u350 07DB  
                    u270 073A                      u191 0684                      u351 07DA  
                    u407 0793                      u271 0739                      u280 0765  
                    u417 07BE                      u281 0764                      u290 0771  
                    u427 07E1                      u291 0770                      u437 0703  
                    u377 0744                      u387 0758                      u397 077F  
                    fsr0 0004                      indf 0000                     l1000 071B  
                   l1010 0732                     l1002 0720                     l1020 074E  
                   l1012 0736                     l1004 0722                     l1030 0775  
                   l1022 0752                     l1014 073A                     l1006 0724  
                   l1040 07A0                     l1032 0779                     l1024 0765  
                   l1016 073E                     l1008 072F                     l1050 07C7  
                   l1042 07A4                     l1034 0784                     l1026 0769  
                   l1018 0749                     l1052 07CF                     l1044 07AC  
                   l1036 0789                     l1028 0771                     l1054 07DB  
                   l1046 07B8                     l1038 078D                     l1056 07E6  
                   l1048 07C3                     l1058 07EA                     l1088 0661  
                   _BRGH 04C2                     _CREN 00C4                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
                   _main 0715                     btemp 007E                     start 0000  
                  ?_main 0070                    _CMCON 001F                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019              ?_UART_Write 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07F1             __end_of_main 07F1                   ??_main 0057  
        send_pelco_d@cmd 007D                   _INTCON 000B        __end_of_UART_Init 0612  
__end_of__initialization 07FD           __pcstackCOMMON 0070             __pidataBANK0 0612  
 send_data@checksum_calc 0051               __pmaintext 0715            ?_send_pelco_d 0070  
           ??_UART_Write 0070               _left_array 002E               _down_array 0035  
     __end_of_UART_Write 06AC           ??_send_pelco_d 0055                  __ptext1 063C  
                __ptext2 06AC                  __ptext3 0673                  __ptext4 05FE  
   end_of_initialization 07FD        __end_of_send_data 0715            send_data@F518 0020  
          send_data@_dat 004A                _UART_Init 05FE                _PORTAbits 0005  
              _PORTBbits 0006           UART_Write@data 0074               _stop_array 0043  
             ?_UART_Init 0070      start_initialization 07F1     __end_of_send_pelco_d 0673  
             init_fetch0 05ED              __pdataBANK0 0020                ___latbits 0001  
          __pcstackBANK0 004A              ??_UART_Init 0074               send_data@i 0054  
               _PIE1bits 008C                _send_data 06AC                 _PIR1bits 000C  
      UART_Init@baudrate 0070               ?_send_data 0070             _send_pelco_d 063C  
               _up_array 003C                 init_ram0 05F1              _right_array 0027  
        send_data@in_dat 0052              ??_send_data 0079        UART_Write@timeout 0075  
         send_data@i_131 0053               _OPTION_REG 0081               _UART_Write 0673  
